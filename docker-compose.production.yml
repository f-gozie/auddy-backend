volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  
  production_redis_data: {}
  


services:
  nginx:
      depends_on:
        - django
      restart: unless-stopped
      build:
        context: ./
        dockerfile: ./compose/production/nginx/Dockerfile
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./.envs/.production/.configs:/etc/nginx/certs

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: auddy_backend_production_django
    volumes:
      - ./media:/app/media:z
      - production_django_media:/app/auddy_backend/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: auddy_backend_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: docker.io/redis:6
    
    volumes:
      - production_redis_data:/data
    

  celeryworker:
    <<: *django
    image: auddy_backend_production_celeryworker
    volumes:
      - ./media:/app/media:z
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: auddy_backend_production_celerybeat
    volumes:
      - ./media:/app/media:z
    command: /start-celerybeat

  flower:
    <<: *django
    image: auddy_backend_production_flower
    command: /start-flower
